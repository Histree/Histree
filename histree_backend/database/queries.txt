MATCH (p:Person) 
WHERE p.id = 
RETURN p.gender AS gender

Charles III id: Q43274   and    Anne id: Q151754   are siblings
MATCH (p1: Person {id: 'Q43274'})-[:PARENT_OF*0..10]-(a1: Person)
MATCH (p2: Person {id: 'Q151754'})-[:PARENT_OF*0..10]-(a2: Person)
WHERE a1.id = a2.id
MATCH path = (p1)-[:PARENT_OF*]->(a1)
RETURN a1.id AS id
LIMIT 1

MATCH path = (p1:Person)<-[:PARENT_OF*0..10]-(a:Person)-[:PARENT_OF*0..10]->(p2:Person)
WHERE p1.id = 'Q43274' AND p2.id = 'Q151754'
RETURN a.id AS id
ORDER BY length(path)
LIMIT 1

Philip: id: Q80976    is father of    Edward id: Q80976
MATCH (p1:Person {id: 'Q43274'}), 
(p2:Person {id: 'Q43274'}), 
path = shortestPath((p1)-[*]-(p2)) 
RETURN length(path) AS length


Path from Edward to Philip just contains those 2

MATCH (p1:Person {id: 'Q80976'}),
(p2:Person {id: 'Q80976'}),
path = shortestPath((p1)-[PARENT_OF*]-(p2))
WITH reduce(output = [], n in nodes(path) | output + n) as nodeCollection
UNWIND nodeCollection as route
RETURN properties(route)

